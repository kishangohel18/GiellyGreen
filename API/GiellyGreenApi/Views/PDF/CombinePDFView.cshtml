@model List<GiellyGreenApi.Models.CombineSupplierInvoice>
@{
    Layout = "";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <link href='https://fonts.googleapis.com/css?family=Mulish' rel='stylesheet'>
    <style>
        body {
            font-family: 'Mulish';
            font-size: 20px;
        }

        .PaddingTop {
            height: 32px;
        }

        .print:last-child {
            page-break-after: auto;
        }

        .print {
            page-break-after: always;
        }

        .AddBorder {
            border: 1px solid black;
        }
    </style>
</head>
<body>
    @foreach (var item in Model)
    {
        <div class="container print">
            @{
                string strDate = "";
                if (item.Month_Header.InvoiceDate != null)
                {
                    var ArrayDate = item.Month_Header.InvoiceDate.ToString().Split('-');
                    string getDay = ArrayDate[0];
                    strDate = String.Format("{0}/{1}/{2}", getDay, item.Month_Header.InvoiceMonth.ToString(), item.Month_Header.InvoiceYear.ToString());
                }

                string path = HttpContext.Current.Server.MapPath("~/ImageStorage");

                if (!Directory.Exists(path))
                {
                    Directory.CreateDirectory(path);
                }
            }
            <table width="100%">
                <tr>
                    <td width="40%">
                        @if (@item.Supplier.LogoUrl != null)
                        {
                            string imgPath = Path.Combine(path, item.Supplier.LogoUrl);
                            byte[] imageByte = File.ReadAllBytes(imgPath);
                            item.Supplier.LogoUrl = Convert.ToBase64String(imageByte);

                            <div><img src='data:image/jpg;base64,@item.Supplier.LogoUrl' style="width:200px; height: 100px;" /></div>
                        }
                    </td>
                    <td width="60%" class="text-right"><div class="text-right h1">Self Billed Invoice</div></td>
                </tr>
                <tr>
                    <td>@Html.DisplayFor(model => item.Supplier.BusinessAddress)</td>
                    <td>
                        <div>
                            <div class="text-right h4">
                                Invoice Date :  @Html.DisplayFor(model => strDate)
                            </div>
                            <div class="text-right h4">
                                Invoice Ref :  @Html.DisplayFor(model => item.Supplier.SupplierReference) _ @Html.DisplayFor(model => item.Month_Header.InvoiceReferance)
                            </div>
                            <br />
                            @if (item.Supplier.TaxReference != null)
                            {
                                <div class="text-right h4">Tax Ref :  @Html.DisplayFor(model => item.Supplier.TaxReference)</div>
                            }
                            @if (item.Supplier.VatNumber != null)
                            {
                                <div class="text-right h4">VAT Number :  @Html.DisplayFor(model => item.Supplier.VatNumber)</div>
                            }
                        </div>
                    </td>
                </tr>
                @if (item.Supplier.CompanyRegAddress != "")
                {
                    <tr>
                        <td><div class="h4 text-left">To : &nbsp;@Html.DisplayFor(model => item.Supplier.CompanyRegAddress)</div></td>
                        <td></td>
                    </tr>
                }
            </table>
            <br />

            <table width="100%">
                <thead>
                    <tr class="AddBorder PaddingTop">
                        <th width="60%" style="text-align: center;">Description</th>
                        <th width="20%"></th>
                        <th width="20%" style="text-align: right;">Amount(GBP)&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="AddBorder PaddingTop">
                        <td class="AddBorder">&nbsp; Hair Services</td>
                        <td class="AddBorder"></td>
                        <td style="text-align:right;" class="AddBorder">@Html.DisplayFor(model => item.Invoice.HairService)&nbsp; </td>
                    </tr>
                    <tr class="AddBorder PaddingTop">
                        <td class="AddBorder">&nbsp; Beauty Services</td>
                        <td class="AddBorder"></td>
                        <td style="text-align:right;" class="AddBorder">@Html.DisplayFor(model => item.Invoice.BeautyService)&nbsp; </td>
                    </tr>

                    @if (item.Invoice.Custom1 != null && item.Invoice.Custom1 != 0)
                    {
                        <tr class="AddBorder PaddingTop">
                            <td class="AddBorder">&nbsp; @Html.DisplayFor(model => item.Month_Header.Custom1)</td>
                            <td class="AddBorder"></td>
                            <td style="text-align:right;" class="AddBorder">@Html.DisplayFor(model => item.Invoice.Custom1)&nbsp; </td>
                        </tr>
                    }
                    @if (item.Invoice.Custom2 != null && item.Invoice.Custom2 != 0)
                    {
                        <tr class="AddBorder PaddingTop">
                            <td class="AddBorder">&nbsp; @Html.DisplayFor(model => item.Month_Header.Custom2)</td>
                            <td class="AddBorder"></td>
                            <td style="text-align:right;" class="AddBorder">@Html.DisplayFor(model => item.Invoice.Custom2)&nbsp; </td>
                        </tr>
                    }
                    @if (item.Invoice.Custom3 != null && item.Invoice.Custom3 != 0)
                    {
                        <tr class="AddBorder PaddingTop">
                            <td class="AddBorder">&nbsp; @Html.DisplayFor(model => item.Month_Header.Custom3)</td>
                            <td class="AddBorder"></td>
                            <td style="text-align:right;" class="AddBorder">@Html.DisplayFor(model => item.Invoice.Custom3)&nbsp; </td>
                        </tr>
                    }
                    @if (item.Invoice.Custom4 != null && item.Invoice.Custom4 != 0)
                    {
                        <tr class="AddBorder PaddingTop">
                            <td class="AddBorder">&nbsp; @Html.DisplayFor(model => item.Month_Header.Custom4)</td>
                            <td class="AddBorder"></td>
                            <td style="text-align:right;" class="AddBorder">@Html.DisplayFor(model => item.Invoice.Custom4)&nbsp; </td>
                        </tr>
                    }
                    @if (item.Invoice.Custom5 != null && item.Invoice.Custom5 != 0)
                    {
                        <tr class="AddBorder PaddingTop">
                            <td class="AddBorder">&nbsp; @Html.DisplayFor(model => item.Month_Header.Custom5)</td>
                            <td class="AddBorder"></td>
                            <td style="text-align:right;" class="AddBorder">@Html.DisplayFor(model => item.Invoice.Custom5)&nbsp; </td>
                        </tr>
                    }
                    <tr class="text-right PaddingTop">
                        <td></td>
                        <td>Subtotal (Net)&nbsp; </td>
                        <td style="text-align:right;" class="AddBorder">@Html.DisplayFor(model => item.Invoice.Net)&nbsp; </td>
                    </tr>
                    <tr class="text-right PaddingTop">
                        <td></td>
                        <td>Vat&nbsp; </td>
                        <td style="text-align:right;" class="AddBorder">@Html.DisplayFor(model => item.Invoice.Vat)&nbsp; </td>
                    </tr>
                    <tr class="text-right PaddingTop">
                        <td></td>
                        <td>Advance paid&nbsp; </td>
                        <td style="text-align:right;" class="AddBorder">@Html.DisplayFor(model => item.Invoice.AdvancePaid)&nbsp; </td>
                    </tr>
                    <tr class="text-right PaddingTop">
                        <td></td>
                        <td>Balance due&nbsp; </td>
                        <td style="text-align:right;" class="AddBorder">@Html.DisplayFor(model => item.Invoice.Balance)&nbsp; </td>
                    </tr>
                </tbody>
            </table>
        </div>
    }
</body>
</html>
